diff --git a/node_modules/react-native-web/dist/cjs/exports/AppRegistry/renderApplication.js b/node_modules/react-native-web/dist/cjs/exports/AppRegistry/renderApplication.js
index 0c0cb2f..fafcf5c 100644
--- a/node_modules/react-native-web/dist/cjs/exports/AppRegistry/renderApplication.js
+++ b/node_modules/react-native-web/dist/cjs/exports/AppRegistry/renderApplication.js
@@ -24,9 +24,10 @@ var _react = _interopRequireDefault(require("react"));
 function renderApplication(RootComponent, WrapperComponent, callback, options) {
   var shouldHydrate = options.hydrate,
     initialProps = options.initialProps,
-    mode = options.mode,
+    // mode = options.mode,
     rootTag = options.rootTag;
-  var renderFn = shouldHydrate ? mode === 'concurrent' ? _render.hydrate : _render.hydrateLegacy : mode === 'concurrent' ? _render.render : _render.default;
+  // var renderFn = shouldHydrate ? mode === 'concurrent' ? _render.hydrate : _render.hydrateLegacy : mode === 'concurrent' ? _render.render : _render.default;
+  var renderFn = shouldHydrate ? _render.hydrate : _render.default;
   (0, _invariant.default)(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);
   return renderFn(/*#__PURE__*/_react.default.createElement(_AppContainer.default, {
     WrapperComponent: WrapperComponent,
diff --git a/node_modules/react-native-web/dist/cjs/exports/findNodeHandle/index.js b/node_modules/react-native-web/dist/cjs/exports/findNodeHandle/index.js
deleted file mode 100644
index 73f254c..0000000
--- a/node_modules/react-native-web/dist/cjs/exports/findNodeHandle/index.js
+++ /dev/null
@@ -1,28 +0,0 @@
-"use strict";
-
-exports.__esModule = true;
-exports.default = void 0;
-var _reactDom = require("react-dom");
-/**
- * Copyright (c) Nicolas Gallagher.
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * 
- */
-
-/**
- * @deprecated imperatively finding the DOM element of a react component has been deprecated in React 18.
- * You should use ref properties on the component instead.
- */
-var findNodeHandle = component => {
-  var node;
-  try {
-    node = (0, _reactDom.findDOMNode)(component);
-  } catch (e) {}
-  return node;
-};
-var _default = exports.default = findNodeHandle;
-module.exports = exports.default;
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/cjs/exports/render/index.js b/node_modules/react-native-web/dist/cjs/exports/render/index.js
index b41ee11..322a8fb 100644
--- a/node_modules/react-native-web/dist/cjs/exports/render/index.js
+++ b/node_modules/react-native-web/dist/cjs/exports/render/index.js
@@ -10,15 +10,16 @@
 
 'use client';
 
-var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
+// var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
 exports.__esModule = true;
-exports.default = renderLegacy;
+exports.default = render;
+// exports.default = renderLegacy;
 exports.hydrate = hydrate;
-exports.hydrateLegacy = hydrateLegacy;
-exports.render = render;
-var _reactDom = require("react-dom");
+// exports.hydrateLegacy = hydrateLegacy;
+// exports.render = render;
+// var _reactDom = require("react-dom");
 var _client = require("react-dom/client");
-var _unmountComponentAtNode = _interopRequireDefault(require("../unmountComponentAtNode"));
+// var _unmountComponentAtNode = _interopRequireDefault(require("../unmountComponentAtNode"));
 var _dom = require("../StyleSheet/dom");
 function hydrate(element, root) {
   (0, _dom.createSheet)(root);
@@ -30,21 +31,21 @@ function render(element, root) {
   reactRoot.render(element);
   return reactRoot;
 }
-function hydrateLegacy(element, root, callback) {
-  (0, _dom.createSheet)(root);
-  (0, _reactDom.hydrate)(element, root, callback);
-  return {
-    unmount: function unmount() {
-      return (0, _unmountComponentAtNode.default)(root);
-    }
-  };
-}
-function renderLegacy(element, root, callback) {
-  (0, _dom.createSheet)(root);
-  (0, _reactDom.render)(element, root, callback);
-  return {
-    unmount: function unmount() {
-      return (0, _unmountComponentAtNode.default)(root);
-    }
-  };
-}
\ No newline at end of file
+// function hydrateLegacy(element, root, callback) {
+//   (0, _dom.createSheet)(root);
+//   (0, _reactDom.hydrate)(element, root, callback);
+//   return {
+//     unmount: function unmount() {
+//       return (0, _unmountComponentAtNode.default)(root);
+//     }
+//   };
+// }
+// function renderLegacy(element, root, callback) {
+//   (0, _dom.createSheet)(root);
+//   (0, _reactDom.render)(element, root, callback);
+//   return {
+//     unmount: function unmount() {
+//       return (0, _unmountComponentAtNode.default)(root);
+//     }
+//   };
+// }
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/cjs/exports/unmountComponentAtNode/index.js b/node_modules/react-native-web/dist/cjs/exports/unmountComponentAtNode/index.js
index 3ea3964..eebe516 100644
--- a/node_modules/react-native-web/dist/cjs/exports/unmountComponentAtNode/index.js
+++ b/node_modules/react-native-web/dist/cjs/exports/unmountComponentAtNode/index.js
@@ -2,7 +2,7 @@
 
 exports.__esModule = true;
 exports.default = void 0;
-var _reactDom = require("react-dom");
+// var _reactDom = require("react-dom");
 /**
  * Copyright (c) Nicolas Gallagher.
  *
@@ -11,5 +11,10 @@ var _reactDom = require("react-dom");
  *
  * 
  */
-var _default = exports.default = _reactDom.unmountComponentAtNode;
-module.exports = exports.default;
\ No newline at end of file
+// var _default = exports.default = _reactDom.unmountComponentAtNode;
+// module.exports = exports.default;
+var _default = function _default(rootTag) {
+  rootTag.unmount();
+  return true;
+};
+module.exports = exports.default = _default;
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/cjs/index.js b/node_modules/react-native-web/dist/cjs/index.js
index b696270..1f631fc 100644
--- a/node_modules/react-native-web/dist/cjs/index.js
+++ b/node_modules/react-native-web/dist/cjs/index.js
@@ -5,8 +5,8 @@ exports.__esModule = true;
 exports.useWindowDimensions = exports.useLocaleContext = exports.useColorScheme = exports.unstable_createElement = exports.unmountComponentAtNode = exports.render = exports.processColor = exports.findNodeHandle = exports.YellowBox = exports.VirtualizedList = exports.View = exports.Vibration = exports.UIManager = exports.TouchableWithoutFeedback = exports.TouchableOpacity = exports.TouchableNativeFeedback = exports.TouchableHighlight = exports.Touchable = exports.TextInput = exports.Text = exports.Switch = exports.StyleSheet = exports.StatusBar = exports.Share = exports.SectionList = exports.ScrollView = exports.SafeAreaView = exports.RefreshControl = exports.ProgressBar = exports.Pressable = exports.Platform = exports.PixelRatio = exports.Picker = exports.PanResponder = exports.NativeModules = exports.NativeEventEmitter = exports.Modal = exports.LogBox = exports.Linking = exports.LayoutAnimation = exports.KeyboardAvoidingView = exports.Keyboard = exports.InteractionManager = exports.ImageBackground = exports.Image = exports.I18nManager = exports.FlatList = exports.Easing = exports.Dimensions = exports.DeviceEventEmitter = exports.Clipboard = exports.CheckBox = exports.Button = exports.BackHandler = exports.Appearance = exports.AppState = exports.AppRegistry = exports.Animated = exports.Alert = exports.ActivityIndicator = exports.AccessibilityInfo = void 0;
 var _createElement = _interopRequireDefault(require("./exports/createElement"));
 exports.unstable_createElement = _createElement.default;
-var _findNodeHandle = _interopRequireDefault(require("./exports/findNodeHandle"));
-exports.findNodeHandle = _findNodeHandle.default;
+// var _findNodeHandle = _interopRequireDefault(require("./exports/findNodeHandle"));
+// exports.findNodeHandle = _findNodeHandle.default;
 var _processColor = _interopRequireDefault(require("./exports/processColor"));
 exports.processColor = _processColor.default;
 var _render = _interopRequireDefault(require("./exports/render"));
diff --git a/node_modules/react-native-web/dist/cjs/vendor/react-native/VirtualizedList/index.js b/node_modules/react-native-web/dist/cjs/vendor/react-native/VirtualizedList/index.js
index f9df024..d2e8541 100644
--- a/node_modules/react-native-web/dist/cjs/vendor/react-native/VirtualizedList/index.js
+++ b/node_modules/react-native-web/dist/cjs/vendor/react-native/VirtualizedList/index.js
@@ -11,7 +11,7 @@ var _RefreshControl = _interopRequireDefault(require("../../../exports/RefreshCo
 var _ScrollView = _interopRequireDefault(require("../../../exports/ScrollView"));
 var _View = _interopRequireDefault(require("../../../exports/View"));
 var _StyleSheet = _interopRequireDefault(require("../../../exports/StyleSheet"));
-var _findNodeHandle = _interopRequireDefault(require("../../../exports/findNodeHandle"));
+// var _findNodeHandle = _interopRequireDefault(require("../../../exports/findNodeHandle"));
 var _Batchinator = _interopRequireDefault(require("../Batchinator"));
 var _clamp = _interopRequireDefault(require("../Utilities/clamp")); 
 var _infoLog = _interopRequireDefault(require("../infoLog"));
diff --git a/node_modules/react-native-web/dist/exports/AppRegistry/renderApplication.js b/node_modules/react-native-web/dist/exports/AppRegistry/renderApplication.js
index b53dff6..cec1265 100644
--- a/node_modules/react-native-web/dist/exports/AppRegistry/renderApplication.js
+++ b/node_modules/react-native-web/dist/exports/AppRegistry/renderApplication.js
@@ -11,15 +11,17 @@ import _extends from "@babel/runtime/helpers/extends";
 
 import AppContainer from './AppContainer';
 import invariant from 'fbjs/lib/invariant';
-import renderLegacy, { hydrateLegacy, render, hydrate } from '../render';
+// import renderLegacy, { hydrateLegacy, render, hydrate } from '../render';
+import render, { hydrate } from '../render';
 import StyleSheet from '../StyleSheet';
 import React from 'react';
 export default function renderApplication(RootComponent, WrapperComponent, callback, options) {
   var shouldHydrate = options.hydrate,
     initialProps = options.initialProps,
-    mode = options.mode,
+    // mode = options.mode,
     rootTag = options.rootTag;
-  var renderFn = shouldHydrate ? mode === 'concurrent' ? hydrate : hydrateLegacy : mode === 'concurrent' ? render : renderLegacy;
+  // var renderFn = shouldHydrate ? mode === 'concurrent' ? hydrate : hydrateLegacy : mode === 'concurrent' ? render : renderLegacy;
+  var renderFn = shouldHydrate ? hydrate : render;
   invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);
   return renderFn(/*#__PURE__*/React.createElement(AppContainer, {
     WrapperComponent: WrapperComponent,
diff --git a/node_modules/react-native-web/dist/exports/AppRegistry/renderApplication.js.flow b/node_modules/react-native-web/dist/exports/AppRegistry/renderApplication.js.flow
index b9df2af..7d9fe20 100644
--- a/node_modules/react-native-web/dist/exports/AppRegistry/renderApplication.js.flow
+++ b/node_modules/react-native-web/dist/exports/AppRegistry/renderApplication.js.flow
@@ -11,7 +11,8 @@
 import type { ComponentType, Node } from 'react';
 import AppContainer from './AppContainer';
 import invariant from 'fbjs/lib/invariant';
-import renderLegacy, { hydrateLegacy, render, hydrate } from '../render';
+// import renderLegacy, { hydrateLegacy, render, hydrate } from '../render';
+import render, { hydrate } from '../render';
 import StyleSheet from '../StyleSheet';
 import React from 'react';
 export type Application = {
@@ -20,7 +21,7 @@ export type Application = {
 declare export default function renderApplication<Props: Object>(RootComponent: ComponentType<Props>, WrapperComponent?: ?ComponentType<*>, callback?: () => void, options: {
   hydrate: boolean,
   initialProps: Props,
-  mode: 'concurrent' | 'legacy',
+  // mode: 'concurrent' | 'legacy',
   rootTag: any,
 }): Application;
 declare export function getApplication(RootComponent: ComponentType<Object>, initialProps: Object, WrapperComponent?: ?ComponentType<*>): {|
diff --git a/node_modules/react-native-web/dist/exports/findNodeHandle/index.js b/node_modules/react-native-web/dist/exports/findNodeHandle/index.js
deleted file mode 100644
index e997fcf..0000000
--- a/node_modules/react-native-web/dist/exports/findNodeHandle/index.js
+++ /dev/null
@@ -1,24 +0,0 @@
-/**
- * Copyright (c) Nicolas Gallagher.
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * 
- */
-
-import { findDOMNode } from 'react-dom';
-
-/**
- * @deprecated imperatively finding the DOM element of a react component has been deprecated in React 18.
- * You should use ref properties on the component instead.
- */
-var findNodeHandle = component => {
-  var node;
-  try {
-    node = findDOMNode(component);
-  } catch (e) {}
-  return node;
-};
-export default findNodeHandle;
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/exports/findNodeHandle/index.js.flow b/node_modules/react-native-web/dist/exports/findNodeHandle/index.js.flow
deleted file mode 100644
index 412af49..0000000
--- a/node_modules/react-native-web/dist/exports/findNodeHandle/index.js.flow
+++ /dev/null
@@ -1,18 +0,0 @@
-/**
- * Copyright (c) Nicolas Gallagher.
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @noflow
- */
-
-import { findDOMNode } from 'react-dom';
-
-/**
- * @deprecated imperatively finding the DOM element of a react component has been deprecated in React 18.
- * You should use ref properties on the component instead.
- */
-declare var findNodeHandle: (component: any) => any;
-export default findNodeHandle;
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/exports/render/index.js b/node_modules/react-native-web/dist/exports/render/index.js
index aa91a2a..b83e514 100644
--- a/node_modules/react-native-web/dist/exports/render/index.js
+++ b/node_modules/react-native-web/dist/exports/render/index.js
@@ -9,35 +9,36 @@
 
 'use client';
 
-import { hydrate as domLegacyHydrate, render as domLegacyRender } from 'react-dom';
+// import { hydrate as domLegacyHydrate, render as domLegacyRender } from 'react-dom';
 import { createRoot as domCreateRoot, hydrateRoot as domHydrateRoot } from 'react-dom/client';
-import unmountComponentAtNode from '../unmountComponentAtNode';
+// import unmountComponentAtNode from '../unmountComponentAtNode';
 import { createSheet } from '../StyleSheet/dom';
 export function hydrate(element, root) {
   createSheet(root);
   return domHydrateRoot(root, element);
 }
-export function render(element, root) {
+// export function render(element, root) {
+export default function render(element, root) {
   createSheet(root);
   var reactRoot = domCreateRoot(root);
   reactRoot.render(element);
   return reactRoot;
 }
-export function hydrateLegacy(element, root, callback) {
-  createSheet(root);
-  domLegacyHydrate(element, root, callback);
-  return {
-    unmount: function unmount() {
-      return unmountComponentAtNode(root);
-    }
-  };
-}
-export default function renderLegacy(element, root, callback) {
-  createSheet(root);
-  domLegacyRender(element, root, callback);
-  return {
-    unmount: function unmount() {
-      return unmountComponentAtNode(root);
-    }
-  };
-}
\ No newline at end of file
+// export function hydrateLegacy(element, root, callback) {
+//   createSheet(root);
+//   domLegacyHydrate(element, root, callback);
+//   return {
+//     unmount: function unmount() {
+//       return unmountComponentAtNode(root);
+//     }
+//   };
+// }
+// export default function renderLegacy(element, root, callback) {
+//   createSheet(root);
+//   domLegacyRender(element, root, callback);
+//   return {
+//     unmount: function unmount() {
+//       return unmountComponentAtNode(root);
+//     }
+//   };
+// }
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/exports/render/index.js.flow b/node_modules/react-native-web/dist/exports/render/index.js.flow
index 1bd771e..fe39218 100644
--- a/node_modules/react-native-web/dist/exports/render/index.js.flow
+++ b/node_modules/react-native-web/dist/exports/render/index.js.flow
@@ -11,9 +11,9 @@
 
 import { hydrate as domLegacyHydrate, render as domLegacyRender } from 'react-dom';
 import { createRoot as domCreateRoot, hydrateRoot as domHydrateRoot } from 'react-dom/client';
-import unmountComponentAtNode from '../unmountComponentAtNode';
+// import unmountComponentAtNode from '../unmountComponentAtNode';
 import { createSheet } from '../StyleSheet/dom';
 declare export function hydrate(element: any, root: any): any;
 declare export function render(element: any, root: any): any;
-declare export function hydrateLegacy(element: any, root: any, callback: any): any;
-declare export default function renderLegacy(element: any, root: any, callback: any): any;
\ No newline at end of file
+// declare export function hydrateLegacy(element: any, root: any, callback: any): any;
+// declare export default function renderLegacy(element: any, root: any, callback: any): any;
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/exports/unmountComponentAtNode/index.js b/node_modules/react-native-web/dist/exports/unmountComponentAtNode/index.js
index 925051c..264b2fb 100644
--- a/node_modules/react-native-web/dist/exports/unmountComponentAtNode/index.js
+++ b/node_modules/react-native-web/dist/exports/unmountComponentAtNode/index.js
@@ -7,5 +7,9 @@
  * 
  */
 
-import { unmountComponentAtNode } from 'react-dom';
-export default unmountComponentAtNode;
\ No newline at end of file
+// import { unmountComponentAtNode } from 'react-dom';
+// export default unmountComponentAtNode;
+export default function unmountComponentAtNode(rootTag) {
+  rootTag.unmount();
+  return true;
+}
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/exports/unmountComponentAtNode/index.js.flow b/node_modules/react-native-web/dist/exports/unmountComponentAtNode/index.js.flow
index b950090..8d1bd06 100644
--- a/node_modules/react-native-web/dist/exports/unmountComponentAtNode/index.js.flow
+++ b/node_modules/react-native-web/dist/exports/unmountComponentAtNode/index.js.flow
@@ -7,5 +7,6 @@
  * @noflow
  */
 
-import { unmountComponentAtNode } from 'react-dom';
-export default unmountComponentAtNode;
\ No newline at end of file
+// import { unmountComponentAtNode } from 'react-dom';
+// export default unmountComponentAtNode;
+export default function unmountComponentAtNode(rootTag): true;
\ No newline at end of file
diff --git a/node_modules/react-native-web/dist/index.js b/node_modules/react-native-web/dist/index.js
index 4f69987..6552b83 100644
--- a/node_modules/react-native-web/dist/index.js
+++ b/node_modules/react-native-web/dist/index.js
@@ -1,5 +1,5 @@
 export { default as unstable_createElement } from './exports/createElement';
-export { default as findNodeHandle } from './exports/findNodeHandle';
+// export { default as findNodeHandle } from './exports/findNodeHandle';
 export { default as processColor } from './exports/processColor';
 export { default as render } from './exports/render';
 export { default as unmountComponentAtNode } from './exports/unmountComponentAtNode';
diff --git a/node_modules/react-native-web/dist/index.js.flow b/node_modules/react-native-web/dist/index.js.flow
index fec1fd6..6666713 100644
--- a/node_modules/react-native-web/dist/index.js.flow
+++ b/node_modules/react-native-web/dist/index.js.flow
@@ -1,6 +1,6 @@
 // @flow strict
 export { default as unstable_createElement } from './exports/createElement';
-export { default as findNodeHandle } from './exports/findNodeHandle';
+// export { default as findNodeHandle } from './exports/findNodeHandle';
 export { default as processColor } from './exports/processColor';
 export { default as render } from './exports/render';
 export { default as unmountComponentAtNode } from './exports/unmountComponentAtNode';
diff --git a/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js b/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js
index 1f52b73..2a24575 100644
--- a/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js
+++ b/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js
@@ -15,7 +15,7 @@ import RefreshControl from '../../../exports/RefreshControl';
 import ScrollView from '../../../exports/ScrollView';
 import View from '../../../exports/View';
 import StyleSheet from '../../../exports/StyleSheet';
-import findNodeHandle from '../../../exports/findNodeHandle';
+// import findNodeHandle from '../../../exports/findNodeHandle';
 import Batchinator from '../Batchinator';
 import clamp from '../Utilities/clamp';
 import infoLog from '../infoLog';
diff --git a/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js.flow b/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js.flow
index d94e43c..90fb6b9 100644
--- a/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js.flow
+++ b/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js.flow
@@ -16,7 +16,7 @@ import RefreshControl from '../../../exports/RefreshControl';
 import ScrollView from '../../../exports/ScrollView';
 import View, { type ViewProps } from '../../../exports/View';
 import StyleSheet from '../../../exports/StyleSheet';
-import findNodeHandle from '../../../exports/findNodeHandle';
+// import findNodeHandle from '../../../exports/findNodeHandle';
 import Batchinator from '../Batchinator';
 import clamp from '../Utilities/clamp';
 import infoLog from '../infoLog';
diff --git a/node_modules/react-native-web/src/exports/AppRegistry/renderApplication.js b/node_modules/react-native-web/src/exports/AppRegistry/renderApplication.js
index 95df521..5b36894 100644
--- a/node_modules/react-native-web/src/exports/AppRegistry/renderApplication.js
+++ b/node_modules/react-native-web/src/exports/AppRegistry/renderApplication.js
@@ -12,7 +12,8 @@ import type { ComponentType, Node } from 'react';
 
 import AppContainer from './AppContainer';
 import invariant from 'fbjs/lib/invariant';
-import renderLegacy, { hydrateLegacy, render, hydrate } from '../render';
+// import renderLegacy, { hydrateLegacy, render, hydrate } from '../render';
+import render, { hydrate } from '../render';
 import StyleSheet from '../StyleSheet';
 import React from 'react';
 
@@ -27,18 +28,13 @@ export default function renderApplication<Props: Object>(
   options: {
     hydrate: boolean,
     initialProps: Props,
-    mode: 'concurrent' | 'legacy',
+    // mode: 'concurrent' | 'legacy',
     rootTag: any
   }
 ): Application {
-  const { hydrate: shouldHydrate, initialProps, mode, rootTag } = options;
-  const renderFn = shouldHydrate
-    ? mode === 'concurrent'
-      ? hydrate
-      : hydrateLegacy
-    : mode === 'concurrent'
-    ? render
-    : renderLegacy;
+  const { hydrate: shouldHydrate, initialProps, /* mode, */ rootTag } = options;
+  // const renderFn = shouldHydrate ? mode === 'concurrent' ? hydrate : hydrateLegacy : mode === 'concurrent' ? render : renderLegacy;
+  const renderFn = shouldHydrate ? hydrate : render;
 
   invariant(rootTag, 'Expect to have a valid rootTag, instead got ', rootTag);
 
diff --git a/node_modules/react-native-web/src/exports/findNodeHandle/index.js b/node_modules/react-native-web/src/exports/findNodeHandle/index.js
deleted file mode 100644
index f0b6ddf..0000000
--- a/node_modules/react-native-web/src/exports/findNodeHandle/index.js
+++ /dev/null
@@ -1,27 +0,0 @@
-/**
- * Copyright (c) Nicolas Gallagher.
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @noflow
- */
-
-import { findDOMNode } from 'react-dom';
-
-/**
- * @deprecated imperatively finding the DOM element of a react component has been deprecated in React 18.
- * You should use ref properties on the component instead.
- */
-const findNodeHandle = (component) => {
-  let node;
-
-  try {
-    node = findDOMNode(component);
-  } catch (e) {}
-
-  return node;
-};
-
-export default findNodeHandle;
diff --git a/node_modules/react-native-web/src/exports/render/index.js b/node_modules/react-native-web/src/exports/render/index.js
index c578e3e..6410fdd 100644
--- a/node_modules/react-native-web/src/exports/render/index.js
+++ b/node_modules/react-native-web/src/exports/render/index.js
@@ -9,16 +9,16 @@
 
 'use client';
 
-import {
-  hydrate as domLegacyHydrate,
-  render as domLegacyRender
-} from 'react-dom';
+// import {
+//   hydrate as domLegacyHydrate,
+//   render as domLegacyRender
+// } from 'react-dom';
 import {
   createRoot as domCreateRoot,
   hydrateRoot as domHydrateRoot
 } from 'react-dom/client';
 
-import unmountComponentAtNode from '../unmountComponentAtNode';
+// import unmountComponentAtNode from '../unmountComponentAtNode';
 import { createSheet } from '../StyleSheet/dom';
 
 export function hydrate(element, root) {
@@ -26,29 +26,30 @@ export function hydrate(element, root) {
   return domHydrateRoot(root, element);
 }
 
-export function render(element, root) {
+// export function render(element, root) {
+export default function render(element, root) {
   createSheet(root);
   const reactRoot = domCreateRoot(root);
   reactRoot.render(element);
   return reactRoot;
 }
 
-export function hydrateLegacy(element, root, callback) {
-  createSheet(root);
-  domLegacyHydrate(element, root, callback);
-  return {
-    unmount: function () {
-      return unmountComponentAtNode(root);
-    }
-  };
-}
+// export function hydrateLegacy(element, root, callback) {
+//   createSheet(root);
+//   domLegacyHydrate(element, root, callback);
+//   return {
+//     unmount: function () {
+//       return unmountComponentAtNode(root);
+//     }
+//   };
+// }
 
-export default function renderLegacy(element, root, callback) {
-  createSheet(root);
-  domLegacyRender(element, root, callback);
-  return {
-    unmount: function () {
-      return unmountComponentAtNode(root);
-    }
-  };
-}
+// export default function renderLegacy(element, root, callback) {
+//   createSheet(root);
+//   domLegacyRender(element, root, callback);
+//   return {
+//     unmount: function () {
+//       return unmountComponentAtNode(root);
+//     }
+//   };
+// }
diff --git a/node_modules/react-native-web/src/exports/unmountComponentAtNode/index.js b/node_modules/react-native-web/src/exports/unmountComponentAtNode/index.js
index c3da00e..0824b04 100644
--- a/node_modules/react-native-web/src/exports/unmountComponentAtNode/index.js
+++ b/node_modules/react-native-web/src/exports/unmountComponentAtNode/index.js
@@ -7,5 +7,9 @@
  * @noflow
  */
 
-import { unmountComponentAtNode } from 'react-dom';
-export default unmountComponentAtNode;
+// import { unmountComponentAtNode } from 'react-dom';
+// export default unmountComponentAtNode;
+export default function unmountComponentAtNode(rootTag) {
+  rootTag.unmount();
+  return true;
+}
diff --git a/node_modules/react-native-web/src/index.js b/node_modules/react-native-web/src/index.js
index f1a6f23..3a303c9 100644
--- a/node_modules/react-native-web/src/index.js
+++ b/node_modules/react-native-web/src/index.js
@@ -1,6 +1,6 @@
 // @flow strict
 export { default as unstable_createElement } from './exports/createElement';
-export { default as findNodeHandle } from './exports/findNodeHandle';
+// export { default as findNodeHandle } from './exports/findNodeHandle';
 export { default as processColor } from './exports/processColor';
 export { default as render } from './exports/render';
 export { default as unmountComponentAtNode } from './exports/unmountComponentAtNode';
diff --git a/node_modules/react-native-web/src/vendor/react-native/VirtualizedList/index.js b/node_modules/react-native-web/src/vendor/react-native/VirtualizedList/index.js
index c7d68bb..d75df32 100644
--- a/node_modules/react-native-web/src/vendor/react-native/VirtualizedList/index.js
+++ b/node_modules/react-native-web/src/vendor/react-native/VirtualizedList/index.js
@@ -26,7 +26,7 @@ import RefreshControl from '../../../exports/RefreshControl';
 import ScrollView from '../../../exports/ScrollView';
 import View, { type ViewProps } from '../../../exports/View';
 import StyleSheet from '../../../exports/StyleSheet';
-import findNodeHandle from '../../../exports/findNodeHandle';
+// import findNodeHandle from '../../../exports/findNodeHandle';
 
 import Batchinator from '../Batchinator';
 import clamp from '../Utilities/clamp';
